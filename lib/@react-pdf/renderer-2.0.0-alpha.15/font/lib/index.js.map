{"version":3,"file":"index.js","sources":["../src/font.js","../src/standard.js","../src/index.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\n\nimport isUrl from 'is-url';\nimport fetch from 'cross-fetch';\nimport fontkit from '@react-pdf/fontkit';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isDataUrl = dataUrl => {\n  const header = dataUrl.split(',')[0];\n  const hasDataPrefix = header.substring(0, 5) === 'data:';\n  const hasBase64Prefix = header.split(';')[1] === 'base64';\n\n  return hasDataPrefix && hasBase64Prefix;\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (isDataUrl(this.src)) {\n      this.data = fontkit.create(Buffer.from(this.src.split(',')[1], 'base64'));\n    } else if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n      this.loading = false;\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) => {\n          this.loading = false;\n          return err ? reject(err) : resolve(data);\n        }),\n      );\n    }\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${this.fontFamily}, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import font from './font';\nimport standard from './standard';\n\nfunction FontStore() {\n  let fonts = {};\n\n  let emojiSource = null;\n\n  let hyphenationCallback = null;\n\n  this.register = data => {\n    const { family } = data;\n\n    if (!fonts[family]) {\n      fonts[family] = font.create(family);\n    }\n\n    // Bulk loading\n    if (data.fonts) {\n      for (let i = 0; i < data.fonts.length; i += 1) {\n        fonts[family].register({ family, ...data.fonts[i] });\n      }\n    } else {\n      fonts[family].register(data);\n    }\n  };\n\n  this.registerEmojiSource = ({ url, format = 'png' }) => {\n    emojiSource = { url, format };\n  };\n\n  this.registerHyphenationCallback = callback => {\n    hyphenationCallback = callback;\n  };\n\n  this.getFont = descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return null;\n\n    if (!fonts[fontFamily]) {\n      throw new Error(\n        `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n      );\n    }\n\n    return fonts[fontFamily].resolve(descriptor);\n  };\n\n  this.load = async descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return;\n\n    const f = this.getFont(descriptor);\n\n    // We cache the font to avoid fetching it many times\n    if (!f.data && !f.loading) {\n      await f.load();\n    }\n  };\n\n  this.reset = () => {\n    const keys = Object.keys(fonts);\n\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      fonts[key].data = null;\n    }\n  };\n\n  this.clear = () => {\n    fonts = {};\n  };\n\n  this.getRegisteredFonts = () => fonts;\n\n  this.getEmojiSource = () => emojiSource;\n\n  this.getHyphenationCallback = () => hyphenationCallback;\n\n  this.getRegisteredFontFamilies = () => Object.keys(fonts);\n}\n\nexport default FontStore;\n"],"names":["fetchFont","src","options","response","fetch","buffer","arrayBuffer","constructor","name","Buffer","from","isDataUrl","dataUrl","header","split","hasDataPrefix","substring","hasBase64Prefix","FontSource","fontFamily","fontStyle","fontWeight","data","loading","load","fontkit","create","isUrl","headers","body","method","Promise","resolve","reject","open","err","Font","family","sources","register","push","descriptor","styleSources","filter","s","exactFit","find","res","leftOffset","rightOffset","fit","length","lt","gt","Error","FontStore","fonts","emojiSource","hyphenationCallback","font","i","registerEmojiSource","url","format","registerHyphenationCallback","callback","getFont","isStandard","standard","includes","f","reset","keys","Object","key","clear","getRegisteredFonts","getEmojiSource","getHyphenationCallback","getRegisteredFontFamilies"],"mappings":"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"}