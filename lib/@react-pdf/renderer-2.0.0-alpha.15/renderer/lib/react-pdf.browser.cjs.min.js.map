{"version":3,"file":"react-pdf.browser.cjs.min.js","sources":["../src/propsEqual.js","../src/renderer.js","../src/index.js","../src/dom.js"],"sourcesContent":["/* eslint-disable no-continue */\n\n/**\n * Checks if two sets of props are equal (recursively)\n *\n * @param {Object} props A\n * @param {Object} props B\n * @returns {Boolean} props equals?\n *\n */\nconst propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i += 1) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render' && !a[propName] !== !b[propName]) {\n      return false;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport {\n  unstable_scheduleCallback as schedulePassiveEffects,\n  unstable_cancelCallback as cancelPassiveEffects,\n} from 'scheduler';\n\nimport propsEqual from './propsEqual';\n\nconst emptyObject = {};\n\nconst createRenderer = ({ onChange = () => {} }) => {\n  return ReactFiberReconciler({\n    schedulePassiveEffects,\n\n    cancelPassiveEffects,\n\n    supportsMutation: true,\n\n    isPrimaryRenderer: false,\n\n    warnsIfNotActing: false,\n\n    appendInitialChild(parentInstance, child) {\n      parentInstance.children.push(child);\n    },\n\n    createInstance(type, { style, children, ...props }) {\n      return {\n        type,\n        box: {},\n        style: style || {},\n        props: props || {},\n        children: [],\n      };\n    },\n\n    createTextInstance(text, rootContainerInstance) {\n      return { type: 'TEXT_INSTANCE', value: text };\n    },\n\n    finalizeInitialChildren(element, type, props) {\n      return false;\n    },\n\n    getPublicInstance(instance) {\n      return instance;\n    },\n\n    prepareForCommit() {\n      // Noop\n    },\n\n    prepareUpdate(element, type, oldProps, newProps) {\n      return !propsEqual(oldProps, newProps);\n    },\n\n    resetAfterCommit: onChange,\n\n    resetTextContent(element) {\n      // Noop\n    },\n\n    getRootHostContext() {\n      return emptyObject;\n    },\n\n    getChildHostContext() {\n      return emptyObject;\n    },\n\n    shouldSetTextContent(type, props) {\n      return false;\n    },\n\n    now: Date.now,\n\n    useSyncScheduling: true,\n\n    appendChild(parentInstance, child) {\n      parentInstance.children.push(child);\n    },\n\n    appendChildToContainer(parentInstance, child) {\n      if (parentInstance.type === 'ROOT') {\n        parentInstance.document = child;\n      } else {\n        parentInstance.children.push(child);\n      }\n    },\n\n    insertBefore(parentInstance, child, beforeChild) {\n      const index = parentInstance.children.indexOf(beforeChild);\n      if (index !== -1 && child)\n        parentInstance.children.splice(index, 0, child);\n    },\n\n    removeChild(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n    },\n\n    removeChildFromContainer(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n    },\n\n    commitTextUpdate(textInstance, oldText, newText) {\n      textInstance.value = newText;\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n      const { style, ...props } = newProps;\n      instance.props = props;\n      instance.style = style;\n    },\n  });\n};\n\nexport default createRenderer;\n","import BlobStream from 'blob-stream';\nimport FontStore from '@react-pdf/font';\nimport renderPDF from '@react-pdf/render';\nimport PDFDocument from '@react-pdf/pdfkit';\nimport layoutDocument from '@react-pdf/layout';\n\nimport createRenderer from './renderer';\nimport { version } from '../package.json';\n\nconst fontStore = new FontStore();\n\nconst pdf = ({ initialValue, onChange }) => {\n  const container = { type: 'ROOT', document: null, lang: 'en-US' };\n  const PDFRenderer = createRenderer({ onChange });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  const updateContainer = doc => {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  };\n\n  if (initialValue) updateContainer(initialValue);\n\n  const getLang = () => {\n    const { document } = container\n    return document.props ? document.props.lang : null\n  }\n\n  const render = async () => {\n    const ctx = new PDFDocument({ autoFirstPage: false, lang: getLang() });\n    const layout = await layoutDocument(container.document, fontStore);\n\n    return renderPDF(ctx, layout);\n  };\n\n  const callOnRender = (params = {}) => {\n    if (container.document.props.onRender) {\n      container.document.props.onRender(params);\n    }\n  };\n\n  const toBlob = async () => {\n    const instance = await render();\n    const stream = instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n          callOnRender({ blob });\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  };\n\n  const toBuffer = async () => {\n    callOnRender();\n    return render();\n  };\n\n  const toString = async () => {\n    let result = '';\n    const instance = await render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        instance.on('data', buffer => {\n          result += buffer;\n        });\n\n        instance.on('end', () => {\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  return {\n    container,\n    toBlob,\n    toBuffer,\n    toString,\n    updateContainer,\n  };\n};\n\nconst Font = fontStore;\n\nconst StyleSheet = {\n  create: s => s,\n};\n\nexport { version, Font, StyleSheet, pdf };\n","/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-props-no-spreading */\n\nimport React from 'react';\nimport * as primitives from '@react-pdf/primitives';\nimport { pdf, version, Font, StyleSheet } from './index';\n\nconst queue = require('queue');\n\nclass InternalBlobProvider extends React.PureComponent {\n  renderQueue = queue({ autostart: true, concurrency: 1 });\n\n  state = { blob: null, url: null, loading: true, error: null };\n\n  componentDidMount() {\n    this.instance = pdf({ onChange: this.queueDocumentRender });\n    this.instance.updateContainer(this.props.document);\n\n    this.renderQueue.on('error', this.onRenderFailed);\n    this.renderQueue.on('success', this.onRenderSuccessful);\n  }\n\n  componentDidUpdate() {\n    this.instance.updateContainer(this.props.document);\n  }\n\n  componentWillUnmount() {\n    this.renderQueue.end();\n  }\n\n  queueDocumentRender = () => {\n    this.renderQueue.splice(0, this.renderQueue.length, () =>\n      this.state.error ? Promise.resolve() : this.instance.toBlob(),\n    );\n  };\n\n  onRenderFailed = error => {\n    this.setState({ error });\n    console.error(error);\n  };\n\n  onRenderSuccessful = blob => {\n    const oldBlobUrl = this.state.url;\n\n    this.setState(\n      { blob, url: URL.createObjectURL(blob), loading: false },\n      () => URL.revokeObjectURL(oldBlobUrl),\n    );\n  };\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    console.warn('You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({\n  className,\n  style,\n  title,\n  children,\n  innerRef,\n  ...props\n}) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          src={url}\n          title={title}\n          ref={innerRef}\n          style={style}\n          className={className}\n          {...props}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    console.warn('You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          style={style}\n          href={params.url}\n          download={fileName}\n          className={className}\n          onClick={downloadOnIE(params.blob)}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nconst throwEnvironmentError = name => {\n  throw new Error(\n    `${name} is a Node specific API. You're either using this method in a browser, or your bundler is not loading react-pdf from the appropriate web build.`,\n  );\n};\n\nexport const renderToStream = () => {\n  throwEnvironmentError('renderToStream');\n};\n\nexport const renderToString = () => {\n  throwEnvironmentError('renderToString');\n};\n\nexport const renderToFile = () => {\n  throwEnvironmentError('renderToFile');\n};\n\nexport const render = () => {\n  throwEnvironmentError('render');\n};\n\nexport * from './index';\n\nexport * from '@react-pdf/primitives';\n\nexport default {\n  pdf,\n  Font,\n  version,\n  StyleSheet,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  renderToStream,\n  renderToString,\n  renderToFile,\n  render,\n  ...primitives,\n};\n"],"names":["propsEqual","a","b","oldPropsKeys","Object","keys","newPropsKeys","length","i","propName","emptyObject","createRenderer","onChange","ReactFiberReconciler","schedulePassiveEffects","cancelPassiveEffects","supportsMutation","isPrimaryRenderer","warnsIfNotActing","appendInitialChild","parentInstance","child","children","push","createInstance","type","style","box","props","createTextInstance","text","rootContainerInstance","value","finalizeInitialChildren","element","getPublicInstance","instance","prepareForCommit","prepareUpdate","oldProps","newProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChild","appendChildToContainer","document","insertBefore","beforeChild","index","indexOf","splice","removeChild","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","fontStore","FontStore","pdf","initialValue","container","lang","PDFRenderer","mountNode","createContainer","updateContainer","doc","render","ctx","PDFDocument","autoFirstPage","layoutDocument","layout","renderPDF","callOnRender","params","onRender","toBlob","stream","pipe","BlobStream","Promise","resolve","reject","on","blob","error","toBuffer","toString","result","buffer","Font","StyleSheet","create","s","queue","require","InternalBlobProvider","renderQueue","autostart","concurrency","state","url","loading","queueDocumentRender","_this","onRenderFailed","setState","console","onRenderSuccessful","oldBlobUrl","URL","createObjectURL","revokeObjectURL","componentDidMount","this","componentDidUpdate","componentWillUnmount","end","React","PureComponent","BlobProvider","warn","PDFViewer","className","title","innerRef","src","ref","PDFDownloadLink","fileName","href","download","onClick","window","navigator","msSaveBlob","throwEnvironmentError","name","Error","renderToStream","renderToString","renderToFile","version","primitives"],"mappings":"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"}